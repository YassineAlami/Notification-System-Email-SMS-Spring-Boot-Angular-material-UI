package org.sid.notificationservice.model;
import com.fasterxml.jackson.annotation.JsonProperty;
import lombok.AllArgsConstructor;
import lombok.Builder;
import lombok.Data;
import lombok.NoArgsConstructor;
import javax.persistence.*;
import java.util.ArrayList;
import java.util.List;

@Entity
@Table(name = "users")
@Data @AllArgsConstructor @NoArgsConstructor @Builder
public class User {

    @Id // Marks this field as the primary key
    @GeneratedValue(strategy = GenerationType.IDENTITY) // Specifies that the ID should be generated by the database
    private Long id; // Unique identifier for the user

    /* @Column(unique = true) // Uncomment to enforce unique usernames */
    private String username; // Username of the user

    private String password; // User's password

    /* @Column(unique = true) // Uncomment to enforce unique email addresses */
    private String email; // User's email address

    private String phoneNumber; // User's phone number

    @ManyToOne // Defines a many-to-one relationship with the Sector entity
    @JoinColumn(name = "sector_id", referencedColumnName = "id") // Specifies the foreign key column in this table referencing Sector
    private Sector sector; // The sector to which the user belongs

    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY) // Prevents this field from being serialized in JSON responses
    @ManyToMany(mappedBy = "users") // Defines a many-to-many relationship with the Notification entity
    private List<Notification> notifications = new ArrayList<>(); // List of notifications associated with the user

    @OneToMany(mappedBy = "user") // Defines a one-to-many relationship with UserNotificationDelivery
    @JsonProperty(access = JsonProperty.Access.WRITE_ONLY) // Prevents this field from being serialized in JSON responses
    private List<UserNotificationDelivery> notificationDeliveries; // List of user notification deliveries associated with this user

}
